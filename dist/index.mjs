var o=class extends Error{constructor(r){super(r),this.name="InternalRouteHandlerError"}},h=class t{config;middlewares;handleServerError;metadataValue;contextType;constructor({config:r={paramsSchema:void 0,querySchema:void 0,bodySchema:void 0,metadataSchema:void 0},middlewares:n=[],handleServerError:T,contextType:i,metadataValue:d}){this.config=r,this.middlewares=n,this.handleServerError=T,this.contextType=i,this.metadataValue=d}params(r){return new t({...this,config:{...this.config,paramsSchema:r}})}query(r){return new t({...this,config:{...this.config,querySchema:r}})}body(r){return new t({...this,config:{...this.config,bodySchema:r}})}defineMetadata(r){return new t({...this,config:{...this.config,metadataSchema:r}})}metadata(r){return new t({...this,metadataValue:r})}use(r){return new t({...this,middlewares:[...this.middlewares,r],contextType:{}})}handler(r){return async(n,T)=>{try{let i=new URL(n.url),d=T?.params?await T.params:{},f=Object.fromEntries([...i.searchParams.keys()].map(e=>{let s=i.searchParams.getAll(e);return s.length===1?[e,s[0]]:[e,s]})),u=this.metadataValue,c={};if(n.method!=="GET"&&n.method!=="DELETE")try{let e=n.headers.get("content-type")||"";if(e.includes("multipart/form-data")||e.includes("application/x-www-form-urlencoded")){let s=await n.formData();c=Object.fromEntries(s.entries())}else c=await n.json()}catch(e){if(this.config.bodySchema)throw new o(JSON.stringify({message:"Invalid body",errors:e}))}if(this.config.paramsSchema){let e=this.config.paramsSchema.safeParse(d);if(!e.success)throw new o(JSON.stringify({message:"Invalid params",errors:e.error.issues}));d=e.data}if(this.config.querySchema){let e=this.config.querySchema.safeParse(f);if(!e.success)throw new o(JSON.stringify({message:"Invalid query",errors:e.error.issues}));f=e.data}if(this.config.bodySchema){let e=this.config.bodySchema.safeParse(c);if(!e.success)throw new o(JSON.stringify({message:"Invalid body",errors:e.error.issues}));c=e.data}if(this.config.metadataSchema&&u!==void 0){let e=this.config.metadataSchema.safeParse(u);if(!e.success)throw new o(JSON.stringify({message:"Invalid metadata",errors:e.error.issues}));u=e.data}let m={},l=async e=>{if(e>=this.middlewares.length)try{let a=await r(n,{params:d,query:f,body:c,ctx:m,metadata:u});return a instanceof Response?a:new Response(JSON.stringify(a),{status:200,headers:{"Content-Type":"application/json"}})}catch(a){return y(a,this.handleServerError)}let s=this.middlewares[e];if(!s)return l(e+1);let S=async(a={})=>(a.ctx&&(m={...m,...a.ctx}),await l(e+1));try{let a=await s({request:n,params:d,query:f,body:c,ctx:m,metadata:u,next:S});return a instanceof Response||(m={...m}),a}catch(a){return y(a,this.handleServerError)}};return l(0)}catch(i){return y(i,this.handleServerError)}}}},y=(t,r)=>t instanceof o?new Response(t.message,{status:400}):r?r(t):new Response(JSON.stringify({message:"Internal server error"}),{status:500});function w(t){return new h({handleServerError:t?.handleServerError,contextType:{}})}export{w as createZodRoute};
//# sourceMappingURL=index.mjs.map